apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f production.yml convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f production.yml convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: envs--production--postgres
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST
                  name: envs--production--postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: envs--production--postgres
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PORT
                  name: envs--production--postgres
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: envs--production--postgres
          image: kanban_backend_production_postgres
          name: postgres
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: production-postgres-data
            - mountPath: /backups
              name: production-postgres-data-backups
      restartPolicy: Always
      volumes:
        - name: production-postgres-data
          persistentVolumeClaim:
            claimName: production-postgres-data
        - name: production-postgres-data-backups
          persistentVolumeClaim:
            claimName: production-postgres-data-backups
status: {}
